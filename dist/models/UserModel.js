(function(){var UserModel,indexOf=[].indexOf||function(item){for(var i=0,l=this.length;l>i;i++)if(i in this&&this[i]===item)return i;return-1};UserModel=function(){function UserModel($log,PermissionModel1){this.PermissionModel=PermissionModel1,this.$log=$log.getInstance("UserModel"),this.users=[],this.authenticatedUser,this.bootstrapped=!1}return UserModel.prototype.isAdmin=function(){return this.userHasRole("admin")},UserModel.prototype.isExternal=function(){return this.userHasRole("external")},UserModel.prototype.hasId=function(id){return null==this.authenticatedUser?!1:id===this.authenticatedUser._id},UserModel.prototype.size=function(){return this.users.length},UserModel.prototype.clean=function(){return this.users=[]},UserModel.prototype.userHasOneOfRoles=function(roles){var currentRole,i,len;for(i=0,len=roles.length;len>i;i++)if(currentRole=roles[i],this.userHasRole(currentRole))return!0;return!1},UserModel.prototype.userHasRole=function(role){var i,len,ref,userRole;if(null==this.authenticatedUser)return!1;for(ref=this.authenticatedUser.roles,i=0,len=ref.length;len>i;i++)if(userRole=ref[i],userRole===role)return!0;return!1},UserModel.prototype.userHasPermission=function(permission){var i,j,len,len1,ref,role,roles,userRole;if(null==this.authenticatedUser)return!1;if(this.authenticatedUser.hasOwnProperty("permissions"))return this.$log.debug("Application manages permissions explictly (on the server side)"),indexOf.call(this.authenticatedUser.permissions,permission)>=0;if(this.$log.debug("Application does not manage permissions explicitly - they will be derrived from roles"),roles=this.PermissionModel.permissions[permission],null===roles||void 0===roles)return this.$log.error("Permission "+permission+" is not defined"),!1;for(i=0,len=roles.length;len>i;i++)for(role=roles[i],ref=this.authenticatedUser.roles,j=0,len1=ref.length;len1>j;j++)if(userRole=ref[j],userRole===role)return!0;return!1},UserModel}(),authModule.factory("UserModel",function($log,PermissionModel){return new UserModel($log,PermissionModel)})}).call(this);